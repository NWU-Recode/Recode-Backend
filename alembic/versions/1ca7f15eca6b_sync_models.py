"""sync models

Revision ID: 1ca7f15eca6b
Revises: b7c8d9e0f1a2
Create Date: 2025-08-16 02:31:38.166437

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1ca7f15eca6b'
down_revision: Union[str, Sequence[str], None] = 'b7c8d9e0f1a2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    challengetier = sa.Enum('plain', 'ruby', 'emerald', 'diamond', name='challengetier')
    questiontier = sa.Enum('bronze', 'silver', 'gold', 'ruby', 'emerald', 'diamond', name='questiontier')
    # Create enum types if they don't exist
    challengetier.create(bind, checkfirst=True)
    questiontier.create(bind, checkfirst=True)
    with op.batch_alter_table('challenge_attempts', schema=None) as batch_op:
        batch_op.alter_column('score',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('total_correct',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
        batch_op.drop_index(batch_op.f('ix_challenge_attempts_challenge_id'))
        batch_op.drop_index(batch_op.f('ix_challenge_attempts_user_id'))
        batch_op.drop_constraint(batch_op.f('uq_challenge_attempts_challenge_user'), type_='unique')

    with op.batch_alter_table('challenges', schema=None) as batch_op:
        batch_op.add_column(sa.Column('lecturer_creator', sa.UUID(), nullable=False))
        batch_op.add_column(sa.Column('linked_module', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('duration', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('tier', challengetier, nullable=False, server_default='plain'))
        batch_op.add_column(sa.Column('mark', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('badge_rule', sa.Text(), nullable=True))
        batch_op.drop_index(batch_op.f('ix_challenges_title'))
        batch_op.create_index(batch_op.f('ix_challenges_tier'), ['tier'], unique=False)
        batch_op.create_foreign_key(None, 'users', ['lecturer_creator'], ['id'])
        batch_op.drop_column('total_points')

    with op.batch_alter_table('question_attempts', schema=None) as batch_op:
        batch_op.alter_column('latest',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
        batch_op.drop_index(batch_op.f('ix_question_attempts_challenge_id'))
        batch_op.drop_index(batch_op.f('ix_question_attempts_code_hash'))
        batch_op.drop_index(batch_op.f('ix_question_attempts_idempotency_key'))
        batch_op.drop_index(batch_op.f('ix_question_attempts_is_correct'))
        batch_op.drop_index(batch_op.f('ix_question_attempts_question_id'))
        batch_op.drop_index(batch_op.f('ix_question_attempts_token'))
        batch_op.drop_index(batch_op.f('ix_question_attempts_user_id'))
        batch_op.drop_constraint(batch_op.f('uq_attempt_idempotency'), type_='unique')

    with op.batch_alter_table('questions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tier', questiontier, nullable=False, server_default='bronze'))
        batch_op.alter_column('points',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
        batch_op.drop_index(batch_op.f('ix_questions_challenge_id'))
        batch_op.drop_index(batch_op.f('ix_questions_language_id'))

    with op.batch_alter_table('slide_extractions', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               type_=sa.DateTime(timezone=True),
               nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    challengetier = sa.Enum('plain', 'ruby', 'emerald', 'diamond', name='challengetier')
    questiontier = sa.Enum('bronze', 'silver', 'gold', 'ruby', 'emerald', 'diamond', name='questiontier')
    with op.batch_alter_table('slide_extractions', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=None,
               type_=postgresql.TIMESTAMP(),
               nullable=True)

    with op.batch_alter_table('questions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_questions_language_id'), ['language_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_questions_challenge_id'), ['challenge_id'], unique=False)
        batch_op.alter_column('points',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
        batch_op.drop_column('tier')

    with op.batch_alter_table('question_attempts', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('uq_attempt_idempotency'), ['question_id', 'user_id', 'idempotency_key'], postgresql_nulls_not_distinct=False)
        batch_op.create_index(batch_op.f('ix_question_attempts_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_question_attempts_token'), ['judge0_token'], unique=False)
        batch_op.create_index(batch_op.f('ix_question_attempts_question_id'), ['question_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_question_attempts_is_correct'), ['is_correct'], unique=False)
        batch_op.create_index(batch_op.f('ix_question_attempts_idempotency_key'), ['idempotency_key'], unique=False)
        batch_op.create_index(batch_op.f('ix_question_attempts_code_hash'), ['code_hash'], unique=False)
        batch_op.create_index(batch_op.f('ix_question_attempts_challenge_id'), ['challenge_id'], unique=False)
        batch_op.alter_column('latest',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)

    with op.batch_alter_table('challenges', schema=None) as batch_op:
        batch_op.add_column(sa.Column('total_points', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_challenges_tier'))
        batch_op.create_index(batch_op.f('ix_challenges_title'), ['title'], unique=False)
        batch_op.drop_column('badge_rule')
        batch_op.drop_column('mark')
        batch_op.drop_column('tier')
        batch_op.drop_column('duration')
        batch_op.drop_column('linked_module')
        batch_op.drop_column('lecturer_creator')

    # Drop enum types after columns removed
    questiontier.drop(bind, checkfirst=True)
    challengetier.drop(bind, checkfirst=True)

    with op.batch_alter_table('challenge_attempts', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('uq_challenge_attempts_challenge_user'), ['challenge_id', 'user_id'], postgresql_nulls_not_distinct=False)
        batch_op.create_index(batch_op.f('ix_challenge_attempts_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenge_attempts_challenge_id'), ['challenge_id'], unique=False)
        batch_op.alter_column('total_correct',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
        batch_op.alter_column('score',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)

    # ### end Alembic commands ###
